version: "3.8"

x-postgres-common:
  &postgres-common
  image: postgres:15-alpine

services:
  postgres_primary:
    <<: *postgres-common
    container_name: postgres-container-primary
    expose:
      - "5432"
    ports:
      - "6666:5432"
    volumes:
      - db-volume-primary:/data
      - ./pg_node_primary/postgresql.conf:/postgresql.conf
      - ./pg_node_primary/fill_trash.sh:/fill_trash.sh
      - ./pg_node_primary/remove_trash.sh:/remove_trash.sh
      - failover_volume:/failover_dir
      - ./pg_node_primary/start.sh:/start.sh
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
      POSTGRES_HOST_AUTH_METHOD: "md5\nhost replication all all md5"
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    command: |
      postgres -c 'config_file=/postgresql.conf'
    networks:
      - pg-network

  postgres_replica:
    <<: *postgres-common
    container_name: postgres-container-replica
    expose:
      - "5432"
    ports:
      - "7777:5432"
    volumes:
      - db-volume-replica:/data/postgres
      - failover_volume:/failover_dir
    environment:
      PGUSER: postgres
      PGPASSWORD: password
      PGDATA: /data/postgres
    command: |
      bash -c "
      until pg_basebackup --pgdata=/data/postgres -R --slot=replication_slot -C --checkpoint=fast --host=postgres_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      bash -c `echo -e \"promote_trigger_file = '/failover_dir/down.trg'\" >> /data/postgres/postgresql.conf`
      chown -Rf postgres:postgres /data/postgres
      chmod -R 700 /data/postgres
      su -p postgres -c postgres
      "
    networks:
      - pg-network
    depends_on:
      - postgres_primary

  pgpool:
    image: pgpool/pgpool:4.4.3
    container_name: pgpool-container
    expose:
      - "9999"
    ports:
      - "9999:9999"
    networks:
      - pg-network
    environment:
      PG_USERNAME: postgres
      PG_PASSWORD: password
    command: |
      bash -c "
      until pg_isready --dbname=postgres --host=postgres_primary --port=5432 --quiet --username=postgres && pg_isready --dbname=postgres --host=postgres_replica --port=5432 --quiet --username=postgres
      do
      echo 'Waiting for starting both nodes to connect...'
      sleep 1s
      done
      /opt/pgpool-II/bin/start.sh
      "
    volumes:
      - ./pgpool2/pgpool.conf:/config/pgpool.conf
      - ./pgpool2/failover.sh:/failover.sh
      - failover_volume:/failover_dir
    depends_on:
      - postgres_primary
      - postgres_replica

  volume_holder:
    image: alpine
    container_name: volume_holder
    command: tail -F anything
    volumes:
      - db-volume-primary:/primary
      - db-volume-replica:/replica
      - failover_volume:/failover


networks:
  pg-network:
    driver: bridge

volumes:
  db-volume-primary:
    name: postgres-pg-primary
    driver: local
    driver_opts:
      o: "size=1g,uid=1000"
      device: tmpfs
      type: tmpfs
  db-volume-replica:
    name: postgres-pg-replica
    driver: local
    driver_opts:
      o: "size=1g,uid=1001"
      device: tmpfs
      type: tmpfs
  failover_volume:
    name: failover_volume
    driver: local
    driver_opts:
      o: "size=1m,uid=1002"
      device: tmpfs
      type: tmpfs