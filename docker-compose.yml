version: "3.8"

x-postgres-common:
  &postgres-common
  image: postgres:14-alpine

services:
  postgres_primary:
    <<: *postgres-common
    container_name: postgres-container-primary
    expose:
      - "5432"
    ports:
      - "6666:5432"
    volumes:
      - db-volume-primary:/data/postgres
      - ./pg_node_primary/pg_primary_init.sql:/docker-entrypoint-initdb.d/00_init.sql
      - ./pg_node_primary/fill_trash.sh:/fill_trash.sh
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
      POSTGRES_HOST_AUTH_METHOD: "md5\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      &&
      bash
    networks:
      - pg-network

  postgres_replica:
    <<: *postgres-common
    container_name: postgres-container-replica
    expose:
      - "5432"
    ports:
      - "7777:5432"
    volumes:
      - db-volume-replica:/data/postgres
    environment:
      PGUSER: replicator
      PGPASSWORD: replicator_password
      PGDATA: /data/postgres
    command: |
      bash -c "
      until pg_basebackup --pgdata=/data/postgres -R --slot=replication_slot --checkpoint=fast --host=postgres_primary --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chown -Rf postgres:postgres /data/postgres
      chmod -R 700 /data/postgres
      su -p postgres -c postgres
      "
    networks:
      - pg-network
    depends_on:
      - postgres_primary
  pgpool:
    image: pgpool/pgpool:4.4.3
    container_name: pgpool-container
    expose:
      - "9999"
    ports:
      - "9999:9999"
    networks:
      - pg-network
    volumes:
      - ./pgpool2/pgpool.conf:/config/pgpool.conf
      - ./pgpool2/pool_passwd:/opt/pgpool-II/etc/pool_passwd
    depends_on:
      - postgres_primary
      - postgres_replica


networks:
  pg-network:
    driver: bridge

volumes:
  db-volume-primary:
    name: postgres-pg-primary
    driver: local
    driver_opts:
      o: "size=1g,uid=1000"
      device: tmpfs
      type: tmpfs
  db-volume-replica:
    name: postgres-pg-replica
    driver: local
    driver_opts:
      o: "size=1g,uid=1001"
      device: tmpfs
      type: tmpfs
